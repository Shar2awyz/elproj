<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARMAAAC3CAMAAAAGjUrGAAAABGdBTUEAALGPC/xhBQAAAgdQTFRF////
        0dvt9fX3LE2itsbkVoG/mbHa6u/3QJR+886QAAAA9bCmeo2wLmhXQF+WPViRydTqa4/Fu8rliKHNtcro
        Snm7L0Fxztns5uz2+Pf30NrsUX29sMbm3uf09Pf7ZoS0b8GD6qiieYOif5W/W3anYnWgIzZoe42uVGeV
        KFZIYIrHR3KyT3ayydHfTHx6j6fROFyqJkSI8riB8sOI8sqGI0afX3OpJzZdwraj9OjW/7etLY115+3t
        MXBekJeuQZh7JkOjcoqDFV1Ju8nGNEl7TVl7SGuf9O/p89qxaEtHOYNv6b6+9KWdgLOl9dLOeMSKV6mA
        qZGF19fX17G5DytkAEMx4qytO1eFqquruMLUU2B4n67I8+HF9t63+uDT86aR9r6v+dTC89OdcXJ0HBwc
        MjIzioqLUFBRCBEZfYeX0pqROEJTurq7OCgmt4N8wYuD8eHhimZg8peU287ZXEI+u9PNHyImcqucjZ2a
        XoyAsrqqp7u4oa2KoLyNIXRUzKWcmJuZktCinMi8fH9wnYx/kcCi1O3ab8aDtN2+V3NjdpivhXRxTqB/
        WoSLW1tcwLDExHt4gVI6z4Rd8p13dmZI+aRzRjwpZnhq8JNoCSBGbJGiNEVnRnqXJHh/xq+PzpqlX2Gj
        inijeW6ir5WsADUej3KFp92yz8yfDhYocV90AAslKDFCTFht6gb3xgAAFoxJREFUeF7tnYtDE2e2wCdB
        kpDwCK8kAyQQqLHyKLQmRZKAGBGUh2BUIEaqi1otUl8tBZZ7r5U+0K3Vfdxu1+ve2m63W3v1j7znnO9M
        MkkmFOhEyTq/WpiZJJP5fjnf+R6ZGSQDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOD34wM/wD8bYDI
        ZhWy2fAiZxgRQMC8tkBMsIVsXlcpXPx8vIZauOSbwc98TdBKIhq8TqHCRd4C/IJ/e7YWI8xrESpbrDZp
        +HX/xmzXSNFGik8TK//OwGrlom6DYrTidWrg3tNUw4tZeLmoW4ffp4iwOt1a1Oyp4SUFduLcfqjwOxUP
        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
        k8I1PQAAAABJRU5ErkJggg==
</value>
  </data>
</root>