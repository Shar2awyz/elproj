<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABLAREDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2D2zxRx6D8qKK/jU/p0MD0H5UYHoPyoooAMD0H5UYHoPyoooA
        MD0H5UYHoPyoooAMD0H5UYHoPyoooAMD0H5UYHoPyoooAMD0H5UYHoPyoooAMD0H5UYHoPyoooAMD0H5
        UYHoPyoooAMD0H5UYHoPyoooAMD0H5UYHoPyoooAMD0H5UYHoPyoooAMD0H5UYHoPyoooAMD0H5UYHoP
        yoooAMD0H5UYHoPyoooAMDI4/AYzQFPBK/L/AHtpx/I5Hv2owGBHUkEV8WftDeJ9X8Ffti+CtSGo3Men
        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
        /wC+aKq+dJ/fb86K/QD4w//Z
</value>
  </data>
</root>