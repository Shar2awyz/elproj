<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>